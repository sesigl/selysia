openapi: 3.0.0
components:
  schemas:

    AiContentResponse:
      type: object
      properties:
        text:
          type: string
        rateLimit:
          type: object
          properties:
            timeUntilRefreshSeconds:
              type: integer
            usage:
              type: integer
            limit:
              type: integer
      required:
        - text
        - rateLimit

    PostResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        userId:
          type: string
        publishAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - message
        - userId
        - publishAt
        - createdAt

    PostResponses:
      type: array
      items:
        $ref: '#/components/schemas/PostResponse'
    CreateOrUpdatePostRequest:
      type: object
      properties:
        message:
          type: string
        publishAt:
          type: string
          format: date-time
      required:
        - message
        - publishAt

    AiContentPostRequest:
      type: object
      properties:
        text:
          type: string
        actor:
          type: string
      required:
        - text
        - actor
  securitySchemes: {}
info:
  title: Post Store API
  description: ''
  version: '1'
paths:
  /ai/generate-content:
    post:
      operationId: ai_generate_content
      summary: Generate content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiContentPostRequest'
      parameters:
        -   in: header
            name: next-auth.session-token
            schema:
              type: string
              format: jwt
            required: true
      responses:
        '200':
          description: "Ai Content Response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiContentResponse'
        '500':
          description: An error message
  /posts:
    get:
      operationId: get
      summary: Get posts
      description: 'Gets posts for a user, the filter userId is required'
      parameters:
        -   in: query
            name: userId
            required: true
            schema:
              type: string
            description: The number of items to skip before starting to collect the result set
        -   in: header
            name: next-auth.session-token
            schema:
              type: string
              format: jwt
            required: true
      responses:
        '200':
          description: Post objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponses'
        '500':
          description: An error message
    post:
      operationId: post
      summary: Create post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePostRequest'
      parameters:
        -   in: header
            name: next-auth.session-token
            schema:
              type: string
              format: jwt
            required: true
      responses:
        '201':
          description: "Created post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '500':
          description: An error message

  /posts/{postId}:
    put:
      operationId: put
      summary: Update post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdatePostRequest'
      parameters:
        -   name: postId
            in: path
            description: Post ID
            required: true
            schema:
              type: string
              format: uuid
        -   in: header
            name: next-auth.session-token
            schema:
              type: string
              format: jwt
            required: true
      responses:
        '204':
          description: "Created post"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '500':
          description: An error message
    delete:
      operationId: delete
      summary: Delete post
      parameters:
        -   name: postId
            in: path
            description: Post ID
            required: true
            schema:
              type: string
              format: uuid
        -   in: header
            name: next-auth.session-token
            schema:
              type: string
              format: jwt
            required: true
      responses:
        '200':
          description: Post objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponses'
        '500':
          description: An error message
